utilizar a função de alerts personalizados
para informar o usuario das situaçoes que acontecerem
importando do backend a resposta de message do json
para utiliza-la no frontend na funçao ativar de alerts 
-------------------------------------------------------------------
possivel maneira de fazer

Backend (Node.js - server.js):
// ... suas rotas ...

app.post('/cadastro', async (req, res) => {
    // ... (lógica de cadastro)

    if (result.rowsAffected > 0) {
        res.json({ success: true, message: { texto: 'Usuário cadastrado com sucesso!', tipo: 'sucesso' } });
    } else {
        res.json({ success: false, message: { texto: 'Erro ao cadastrar usuário.', tipo: 'erro' } });
    }

    // ...
});

// ... outras rotas ...

// Exemplo em outra rota com redirecionamento:

app.post('/login', async (req, res) => {
    // ... (lógica de login)

    if (/* login bem-sucedido */) {
      res.json({
        success: true,
        message: { texto: 'Login realizado com sucesso!', tipo: 'sucesso', redirectUrl: '/dashboard' }
      });
    } else {
      // ...
    }

});

Frontend (JavaScript do cliente):
// ... (seu código)


fetch('/cadastro', { /* ... */ }) // ou /login, ou qualquer rota
.then(response => response.json())
.then(data => {
  ativar(data.message.texto, data.message.tipo, data.message?.redirectUrl); // o "?" previne erro se redirectUrl não existir
});



// Função para obter o tipo de usuário atual do sistema
// Esta função deve ser adaptada para integrar com seu sistema de autenticação
function obterTipoUsuarioLogado() {
    // Implemente a lógica para obter o tipo de usuário do seu sistema
    // Exemplos:
    // 1. Recuperar de um cookie ou localStorage
    // const tipoUsuario = localStorage.getItem('tipoUsuario');
    
    // 2. Recuperar de uma variável global definida pelo servidor
    // const tipoUsuario = window.userType;
    
    // 3. Fazer uma requisição AJAX para um endpoint da API
    // (código assíncrono omitido)
    
    // Por enquanto, retornamos um valor fixo para demonstração
    // Substitua por sua lógica real de autenticação
    return 'aluno'; // Valores possíveis: 'aluno', 'professor', 'coordenador'
}